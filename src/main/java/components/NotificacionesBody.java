package components;

import entidades.Comentario;
import entidades.Notificacion;
import entidades.Publicacion;
import entidades.Usuario;
import java.util.LinkedList;
import java.util.List;
import logica.Context;
import net.miginfocom.swing.MigLayout;
import swingComponents.ScrollBar;

public class NotificacionesBody extends javax.swing.JPanel {

    private List<Notificacion> notificaciones;
    private List<NotificacionItem> listNotificaciones;

    /**
     * Creates new form MuroBody
     */
    public NotificacionesBody() {
        initComponents();
        this.listNotificaciones = new LinkedList<>();
    }

    public void init(List<Notificacion> notificaciones) {
        this.notificaciones = notificaciones;
        panBody.setLayout(new MigLayout("fillx", "10[fill]10", "0[top]10"));
        panNotiBody.setVerticalScrollBar(new ScrollBar());
        cargarItems();
    }

    private void cargarItems() {
        notificaciones.forEach(noti -> {
            NotificacionItem notificacion = new NotificacionItem(noti);
            listNotificaciones.add(notificacion);
            panBody.add(notificacion, "wrap");
        });
        refresh();
    }

    public void agregarNotificacion(Notificacion noti) {
        NotificacionItem notificacion = new NotificacionItem(noti);
        listNotificaciones.add(notificacion);
        panBody.add(notificacion, "wrap");
        refresh();
    }

    private void refresh() {
        panBody.repaint();
        panBody.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panNotiBody = new javax.swing.JScrollPane();
        panBody = new javax.swing.JPanel();

        setBackground(java.awt.Color.white);

        panNotiBody.setBackground(java.awt.Color.white);
        panNotiBody.setBorder(null);
        panNotiBody.setMaximumSize(new java.awt.Dimension(32767, 15000));

        panBody.setBackground(new java.awt.Color(233, 233, 233));

        javax.swing.GroupLayout panBodyLayout = new javax.swing.GroupLayout(panBody);
        panBody.setLayout(panBodyLayout);
        panBodyLayout.setHorizontalGroup(
            panBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 269, Short.MAX_VALUE)
        );
        panBodyLayout.setVerticalGroup(
            panBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );

        panNotiBody.setViewportView(panBody);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panNotiBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panNotiBody, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panBody;
    private javax.swing.JScrollPane panNotiBody;
    // End of variables declaration//GEN-END:variables
}
