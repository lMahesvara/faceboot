package components;

import entidades.Comentario;
import entidades.Publicacion;
import events.EventoRegistrarComentario;
import java.util.List;
import net.miginfocom.swing.MigLayout;
import observers.ObserverRegistrarComentario;
import peticiones.PeticionComentario;

public class PublicacionComentarios extends javax.swing.JPanel implements ObserverRegistrarComentario {

    private List<Comentario> comentarios;
    private Publicacion publicacion;
    private MuroBody parent;

    /**
     * Creates new form PublicacionComentarios
     */
    public PublicacionComentarios( Publicacion publicacion, MuroBody parent) {
        initComponents();
        this.comentarios = publicacion.getComentarios();
        this.publicacion = publicacion;
        this.parent = parent;
        EventoRegistrarComentario.getInstance().addObserver(this);

        init();
    }

    private void init() {
        setLayout(new MigLayout("fillx","5[]5"));
        cargarItems();
    }

    private void cargarItems() {
        if(comentarios == null) return;
        comentarios.forEach(comentario -> {
            ComentarioItem comentarioItem = new ComentarioItem(comentario, this);
            comentarioItem.setUsuario(comentario.getUsuario().getUsuario());
            comentarioItem.setComentario(comentario.getTexto());
            add(comentarioItem, "wrap, width 100%");

        });
        refresh();
    }

    private void agregarComentario(Comentario comentario) {
        if (publicacion.equals(comentario.getPublicacion())) {
            ComentarioItem comentarioItem = new ComentarioItem(comentario, this);
            comentarioItem.setUsuario(comentario.getUsuario().getUsuario());
            comentarioItem.setComentario(comentario.getTexto());
            add(comentarioItem, "wrap, width 100%");
            refresh();
        }
    }
    
    public void refreshMuro(){
        parent.refresh();
    }
    
    public void refresh(){
        repaint();
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void update(PeticionComentario peticion) {
        agregarComentario(peticion.getComentario());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
